version: "3.9"

services:
  # Frontend (React/Next.js)
  frontend:
    build:
      context: ./frontend  # Path to your frontend folder
      dockerfile: Dockerfile  # Dockerfile name (default is Dockerfile)
    ports:
      - "5173:5173"  # Expose frontend on port 5173 (not 3000)
    environment:
      - VITE_PORT=5173  # Force Vite to use port 5173
      - NEXT_PUBLIC_API_URL=http://backend:8000  # Backend API URL for frontend communication
    depends_on:
      - backend  # Ensure backend is ready before frontend starts
    networks:
      - app-network

  # Backend (FastAPI)
  backend:
    build:
      context: ./backend  # Path to your backend folder
      dockerfile: Dockerfile  # Ensure this Dockerfile exists in the backend folder
    ports:
      - "8000:8000"  # Expose backend on port 8000
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/fasttrade99-new  # Database connection string
    depends_on:
      - db  # Ensure PostgreSQL is up before starting the backend
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://38.242.253.72:8000/health"]
      interval: 30s
      retries: 5
    networks:
      - app-network

  # Database (PostgreSQL)
  db:
    image: postgres  # Use a specific version of PostgreSQL
    container_name: postgres_db  # Name the database container
    environment:
      POSTGRES_DB: fasttrade99-new  # Name of the database
      POSTGRES_USER: postgres  # Username for PostgreSQL
      POSTGRES_PASSWORD: password  # Password for PostgreSQL
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist database data
    ports:
      - "5439:5432"  # Expose PostgreSQL on port 5439 (host port)
    networks:
      - app-network

# Define the network for inter-container communication
networks:
  app-network:
    driver: bridge

# Volumes for data persistence
volumes:
  pgdata:  # Define a volume for PostgreSQL data persistence

